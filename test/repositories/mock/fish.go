// Code generated by MockGen. DO NOT EDIT.
// Source: fish.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	models "diving-log-book-service/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFishInterface is a mock of FishInterface interface.
type MockFishInterface struct {
	ctrl     *gomock.Controller
	recorder *MockFishInterfaceMockRecorder
}

// MockFishInterfaceMockRecorder is the mock recorder for MockFishInterface.
type MockFishInterfaceMockRecorder struct {
	mock *MockFishInterface
}

// NewMockFishInterface creates a new mock instance.
func NewMockFishInterface(ctrl *gomock.Controller) *MockFishInterface {
	mock := &MockFishInterface{ctrl: ctrl}
	mock.recorder = &MockFishInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFishInterface) EXPECT() *MockFishInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockFishInterface) Create(arg0 string) (*models.Fish, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*models.Fish)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockFishInterfaceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockFishInterface)(nil).Create), arg0)
}
