// Code generated by MockGen. DO NOT EDIT.
// Source: dive-fish.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	models "diving-log-book-service/internal/models"
	types "diving-log-book-service/internal/types"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDiveFishInterface is a mock of DiveFishInterface interface.
type MockDiveFishInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDiveFishInterfaceMockRecorder
}

// MockDiveFishInterfaceMockRecorder is the mock recorder for MockDiveFishInterface.
type MockDiveFishInterfaceMockRecorder struct {
	mock *MockDiveFishInterface
}

// NewMockDiveFishInterface creates a new mock instance.
func NewMockDiveFishInterface(ctrl *gomock.Controller) *MockDiveFishInterface {
	mock := &MockDiveFishInterface{ctrl: ctrl}
	mock.recorder = &MockDiveFishInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiveFishInterface) EXPECT() *MockDiveFishInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDiveFishInterface) Create(arg0 types.CreateFishPayload) (*models.DiveFish, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*models.DiveFish)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockDiveFishInterfaceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDiveFishInterface)(nil).Create), arg0)
}
